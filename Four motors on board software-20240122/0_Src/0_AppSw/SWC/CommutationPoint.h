/*_COMMUTATION_POINT_H__*/

#ifndef _COMMUTATION_POINT_H__
#define _COMMUTATION_POINT_H__

#include "platform_types.h"
#include "GTM_ATOM_PWM_6Step.h"
#include  "MotorMgtSwc.h"
#include "CfgOffset_CommutationPoint.h"

//#define POS_CTRL_STEP_OFFSET_CCW                (2)
//#define POS_CTRL_STEP_OFFSET_CW                (2)
//#define K_ELE_ZERO_OFFSET_CW                   (11)
//#define K_ELE_ZERO_OFFSET_CCW                   (11)

#define K_TOTAL_COUNTS_PER_MECH_ROTATION    (0x400)
#define K_MOT_POLE_PAIRS                    (5)
#define K_TOTAL_COUNTS_PER_ELE_ROTATION     (K_TOTAL_COUNTS_PER_MECH_ROTATION/K_MOT_POLE_PAIRS)    /*1000/5=200*/

#define K_DEGREE_60_ELE_ANGLE              (K_TOTAL_COUNTS_PER_ELE_ROTATION/6)                    /*200/6=34*/


#define K_COMMUTATION_CW_POINT_00            ((K_ELE_ZERO_OFFSET_CW)%K_TOTAL_COUNTS_PER_ELE_ROTATION)      //11
#define K_COMMUTATION_CW_POINT_01            ((K_COMMUTATION_CW_POINT_00+K_DEGREE_60_ELE_ANGLE)%K_TOTAL_COUNTS_PER_ELE_ROTATION)   //46
#define K_COMMUTATION_CW_POINT_02            ((K_COMMUTATION_CW_POINT_00+K_DEGREE_60_ELE_ANGLE*2)%K_TOTAL_COUNTS_PER_ELE_ROTATION) //80
#define K_COMMUTATION_CW_POINT_03            ((K_COMMUTATION_CW_POINT_00+K_DEGREE_60_ELE_ANGLE*3)%K_TOTAL_COUNTS_PER_ELE_ROTATION) //114
#define K_COMMUTATION_CW_POINT_04            ((K_COMMUTATION_CW_POINT_00+K_DEGREE_60_ELE_ANGLE*4)%K_TOTAL_COUNTS_PER_ELE_ROTATION) //148
#define K_COMMUTATION_CW_POINT_05            ((K_COMMUTATION_CW_POINT_00+K_DEGREE_60_ELE_ANGLE*5)%K_TOTAL_COUNTS_PER_ELE_ROTATION) //182

//#define K_COMMUTATION_CW_POINT_00           (160-K_ELE_ZERO_OFFSET)
//#define K_COMMUTATION_CW_POINT_01           (126-K_ELE_ZERO_OFFSET)
//#define K_COMMUTATION_CW_POINT_02           (92-K_ELE_ZERO_OFFSET)
//#define K_COMMUTATION_CW_POINT_03           (58-K_ELE_ZERO_OFFSET)
//#define K_COMMUTATION_CW_POINT_04           (24-K_ELE_ZERO_OFFSET)
//#define K_COMMUTATION_CW_POINT_05           (193-K_ELE_ZERO_OFFSET)


//#define K_COMMUTATION_CCW_POINT_00            (-(K_TOTAL_COUNTS_PER_ELE_ROTATION-K_COMMUTATION_CW_POINT_05))
//#define K_COMMUTATION_CCW_POINT_01            (-(K_TOTAL_COUNTS_PER_ELE_ROTATION-K_COMMUTATION_CW_POINT_04))
//#define K_COMMUTATION_CCW_POINT_02            (-(K_TOTAL_COUNTS_PER_ELE_ROTATION-K_COMMUTATION_CW_POINT_03))
//#define K_COMMUTATION_CCW_POINT_03            (-(K_TOTAL_COUNTS_PER_ELE_ROTATION-K_COMMUTATION_CW_POINT_02))
//#define K_COMMUTATION_CCW_POINT_04            (-(K_TOTAL_COUNTS_PER_ELE_ROTATION-K_COMMUTATION_CW_POINT_01))
//#define K_COMMUTATION_CCW_POINT_05            (-(K_TOTAL_COUNTS_PER_ELE_ROTATION-K_COMMUTATION_CW_POINT_00))
//
#define K_COMMUTATION_CCW_POINT_00            (-K_ELE_ZERO_OFFSET_CCW)      //-11
#define K_COMMUTATION_CCW_POINT_01            (-34-K_ELE_ZERO_OFFSET_CCW)   //-45
#define K_COMMUTATION_CCW_POINT_02            (-68-K_ELE_ZERO_OFFSET_CCW)   //-79
#define K_COMMUTATION_CCW_POINT_03            (-102-K_ELE_ZERO_OFFSET_CCW)  //-113
#define K_COMMUTATION_CCW_POINT_04            (-136-K_ELE_ZERO_OFFSET_CCW)  //-147
#define K_COMMUTATION_CCW_POINT_05            (-170-K_ELE_ZERO_OFFSET_CCW)  //-182

typedef struct 
{
    sint16   CmtCW_P00;
    sint16   CmtCW_P01;
    sint16   CmtCW_P02;
    sint16   CmtCW_P03;
    sint16   CmtCW_P04;
    sint16   CmtCW_P05;


    sint16   CmtCCW_P00;
    sint16   CmtCCW_P01;
    sint16   CmtCCW_P02;
    sint16   CmtCCW_P03;
    sint16   CmtCCW_P04;
    sint16   CmtCCW_P05;

}commutationPointCfg;

typedef enum
{
    EN_COMMUTATION_CW_POINT00,
    EN_COMMUTATION_CW_POINT01,
    EN_COMMUTATION_CW_POINT02,
    EN_COMMUTATION_CW_POINT03,
    EN_COMMUTATION_CW_POINT04,
    EN_COMMUTATION_CW_POINT05,

    EN_COMMUTATION_CCW_POINT00,
    EN_COMMUTATION_CCW_POINT01,
    EN_COMMUTATION_CCW_POINT02,
    EN_COMMUTATION_CCW_POINT03,
    EN_COMMUTATION_CCW_POINT04,
    EN_COMMUTATION_CCW_POINT05,

    EN_COMMUTATION_UNKNOWN
}enCOMMUTE_POINT;


typedef struct
{
    enMotorRotationDir            rotDir;
    enCOMMUTE_POINT  cmPoint;
    enComutateDriverIndex cmStepIndex;
}stCommutationMap;

enCOMMUTE_POINT CommutationPoint_check(sint16 encodePosition,enMotorRotationDir rotationDir);
enComutateDriverIndex Commutation_getCommuPosIndex(enMotorRotationDir rotDirection);

#endif  /*_COMMUTATION_POINT_H__*/
